{"componentChunkName":"component---src-templates-docs-js","path":"/01_word_vectors/02_assignment1","result":{"data":{"site":{"siteMetadata":{"title":"CS224n Natural Language Processing Tutorial | Abhishek Dutt","docsLocation":"https://abhishekdutt.github.io/cs224n-tensorflow/"}},"mdx":{"fields":{"id":"7e2dcfeb-c0e1-572a-9c83-0610527892dd","title":"Assignment 1","slug":"/01_word_vectors/02_assignment1"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Assignment 1\",\n  \"metaTitle\": \"This is the title tag of this page\",\n  \"metaDescription\": \"This is the meta description\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This chapter is all about Assignment 1. \", mdx(\"br\", null), \"\\nAssignments are probably the most usefull part of this tutorial. \", mdx(\"br\", null)), mdx(\"p\", null, \"In this assignment we work on window based matrix and word vec. \", mdx(\"br\", null), \"\\nYou should also be knowing about SVD. \", mdx(\"br\", null), \"\\nIf you get stuck there are a hints on this page below. \", mdx(\"br\", null)), mdx(\"p\", null, \"Following is a read only view of the assignment. To attempt solving it, click: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://colab.research.google.com/github/AbhishekDutt/cs224n-tensorflow/blob/master/A1/exploring_word_vectors.ipynb\"\n  }), mdx(\"img\", _extends({\n    parentName: \"a\"\n  }, {\n    \"src\": \"https://colab.research.google.com/assets/colab-badge.svg\",\n    \"alt\": \"Open in Colab\"\n  }))), \" \", mdx(\"br\", null), \"\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"(Needs a Google account)\")), mdx(\"iframe\", {\n    src: \"https://web.stanford.edu/class/archive/cs/cs224n/cs224n.1194/assignments/a1_preview/exploring_word_vectors.html\",\n    width: \"800\",\n    height: \"400\"\n  }), mdx(\"h2\", null, \"Hints:\"), mdx(\"p\", null, \"In case you are stuck, here are a few hints:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }), mdx(\"li\", {\n    parentName: \"ol\"\n  }), mdx(\"li\", {\n    parentName: \"ol\"\n  }), mdx(\"li\", {\n    parentName: \"ol\"\n  })), mdx(\"p\", null, \"Here is the solved version of the Assignment 1 \", \"[COLAB]\", \", but it is highly recommened that you try it yourself first.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#hints","title":"Hints:"}]},"parent":{"__typename":"File","relativePath":"01_word_vectors/02_assignment1.md"},"frontmatter":{"metaTitle":"This is the title tag of this page","metaDescription":"This is the meta description"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/00_toc","title":"Table of Contents"}}},{"node":{"fields":{"slug":"/03_word_window","title":"03. Word Window Classification, Neural Networks, and Matrix Calculus"}}},{"node":{"fields":{"slug":"/05_linguistic_structure_dependency_parsing","title":"05. Linguistic Structure: Dependency Parsing"}}},{"node":{"fields":{"slug":"/01_word_vectors","title":"Word Vectors"}}},{"node":{"fields":{"slug":"/06_language_models_rnn","title":"06. The probability of a sentence? Recurrent Neural Networks and Language Models"}}},{"node":{"fields":{"slug":"/15_natural_language_generation","title":"15. Natural Language Generation"}}},{"node":{"fields":{"slug":"/07_vanishing_gradients_fancy_rnn","title":"07. Vanishing Gradients and Fancy RNNs"}}},{"node":{"fields":{"slug":"/codeblock","title":"Syntax Highlighting"}}},{"node":{"fields":{"slug":"/extra_stuff","title":"Extra Stuff"}}},{"node":{"fields":{"slug":"/","title":"Welcome"}}},{"node":{"fields":{"slug":"/codeblock/1-index","title":"Sub Page"}}},{"node":{"fields":{"slug":"/01_word_vectors/02_assignment1","title":"Assignment 1"}}},{"node":{"fields":{"slug":"/01_word_vectors/03_word2vec","title":"Word2Vec"}}},{"node":{"fields":{"slug":"/01_word_vectors/01_count_based","title":"Count Based Word Vectors"}}},{"node":{"fields":{"slug":"/01_word_vectors/singular_value_decomposition","title":"Singular Value Decomposition"}}}]}},"pageContext":{"id":"7e2dcfeb-c0e1-572a-9c83-0610527892dd"}}}