{"componentChunkName":"component---src-templates-docs-js","path":"/1_word_vectors","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"9a1442a9-709f-505b-a93c-add859cada84","title":"1. Word Vectors","slug":"/1_word_vectors"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"1. Word Vectors\",\n  \"metaTitle\": \"Lecture 1 - Word Vectors\",\n  \"metaDescription\": \"All about word vectors\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"Aim of CS224n course:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"An understanding of effective modern methods for deep learning\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basics first, then key methods used in NLP: Recurrent networds, attention, etc.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A big picture understanding of human languagegs and the difficulties in understadning and producting them\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"An understanding of and ability to build systems (in PyTorch) for some of the major problems in NLP:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Word meaning, dependency parsing, machine translation, question answering\")))), mdx(\"h3\", null, \"Aims of this tutorial:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Be fast\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Dont waste time\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Cover only things that are important from a preffesional point of view and not really needed for academic stuff\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Dont go deep into academic theory, but go deep if needed\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Use pictures.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"As less cognitive load as possible\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use pictures if needed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use words if needed\")))), mdx(\"p\", null, \"I am a visual learner and find it much easier to learn by seeing things,\\nthan by imagining mathematical symbols in my mind.\\nFollow a mind map approach. Ask and answer What, Why, How.\\nGo easy on the math, focus on the practical parts.\"), mdx(\"h3\", null, \"Here's what we will learn today:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Word2Vec introduction\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Word2Vec objective function gradients\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Optimizaion basics\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Looking at word vectors\")), mdx(\"hr\", null), mdx(\"p\", null, \"\\\"You shall know a word by the company it keeps\\\"\\n-- J. R. Firth (1957:11)\"), mdx(\"p\", null, \"Assuming you already have some vague idea what is a word vector, if you dont this is a word vector:\"), mdx(\"p\", null, \"<TODO: Display a word vector>\"), mdx(\"p\", null, \"Word2Vec is the method by which we get array of numbers corresponding to a list of words.\\ni.e. Every word in a fixed vocablulary is represnedted by a vector.\"), mdx(\"p\", null, \"A list of such word vectors is called a word embedding, coz these numbers embed the meaning of the word in the vector.\"), mdx(\"h3\", null, \"Word2vec paper suggested 2 methods:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Continuous Bag Of Words: \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Go through each poition 't' in the text, which has a center word 'c' and context (\\\"outside\\\") words \\\"o\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the similarity of the word vectors for c and o to calculate the probability of o given c (or vice versa in case of Skip gram)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Keep adjusting the word vectors to maximize this probability\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Skip-Gram method\")), mdx(\"p\", null, \"History:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Word2vec (Mikolov et al. 2013) is a framework for learning word vectors. \", \"[This is the link to the original paper, go ahead take a look]\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#aim-of-cs224n-course","title":"Aim of CS224n course:"},{"url":"#aims-of-this-tutorial","title":"Aims of this tutorial:"},{"url":"#heres-what-we-will-learn-today","title":"Here's what we will learn today:"},{"url":"#word2vec-paper-suggested-2-methods","title":"Word2vec paper suggested 2 methods:"}]},"parent":{"relativePath":"1_word_vectors.md"},"frontmatter":{"metaTitle":"Lecture 1 - Word Vectors","metaDescription":"All about word vectors"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/codeblock/1-index","title":"Sub Page"}}},{"node":{"fields":{"slug":"/codeblock","title":"Syntax Highlighting"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/","title":"Welcome"}}},{"node":{"fields":{"slug":"/1_word_vectors","title":"1. Word Vectors"}}},{"node":{"fields":{"slug":"/15_natural_language_generation","title":"Natural Language Generation"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"9a1442a9-709f-505b-a93c-add859cada84"}}}